#!/usr/bin/env ruby
#

require "whois"
require 'cloudflare'
require 'yaml'


# get credentials
config_file = "#{ENV['HOME']}/.cfcli.yml"
config = YAML.load_file(config_file)
api_key = config['defaults']['token']
email = config['defaults']['email']

cf = CloudFlare::connection(api_key, email)
c = Whois::Client.new

# print header
print_format = "%-30s  %8s  %-22s %-14s %-7s %-16s\n"
printf(print_format, "domain", "locked", "registrar", "nameservers", "via cf", "A record")

cf.zone_load_multi["response"]["zones"]["objs"].each { |record|
	begin
		domain = record["zone_name"]
		r = c.lookup(domain)
	rescue
		puts "#{domain} lookup timeout"
		next
	end


	if not r.registered?
		puts "#{domain} not unregistered"
		next
	end

	lock = r.content =~ /transfer ?prohibited/i ? "Locked":"Unlocked"

	reg = r.registrar.nil? ? "*Unknown":r.registrar.name
	ns = r.nameservers.first.name.split('.')[-2]

	via_cloudflare = "?"
	ip = "?"
	cf.rec_load_all(domain)["response"]["recs"]["objs"].each { |dns|
		if dns["zone_name"] == domain && dns["type"] == "A"
			via_cloudflare = dns["service_mode"]
			ip = dns["content"]
			break
		end
	}

	printf(print_format, domain, lock, reg, ns, via_cloudflare=='1'?'on':'off', ip)
}
